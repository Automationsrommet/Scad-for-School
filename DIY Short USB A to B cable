//Arduinokabel

//There are four parts. The sleeves should be printed in flex filament.
//The sleeves are not strictly neccesary and could be replaced with hotglue.
//Hotglue is recommended inside the flex sleeves to fix in place and insulate.

//Input parameters:

cablewidth=6;
cableheigth=2;

//Uncomment the part that you want to export
//usbbplug();
//usbbsleeve();
 //usbaplug();
 usbasleeve();
 
 module usbbsleeve(){
    difference(){
union(){
//orangeb();
//redb();
translate([0,0,5])greenb();
}
translate([0,0,-7])cube([1,20,7],center=true);
translate([0,0,-9.7])rotate([0,0,45])cylinder(2,0,6,center=true,$fn=4);
translate([0,0,5])yellowb();
color("green")translate([0,0,-7.5])
//difference(){
minkowski(){
    linear_extrude(6)
polygon([[0,-7.3/2],[-8.1/2,-7.3/2],[-8.1/2,-7.3/2+6],[-8.1/2+1.3,7.3/2],[8.1/2-1.3,7.3/2],[8.1/2,-7.3/2+6],[8.1/2,-7.3/2]]);
sphere(1.5,$fn=5);   
} 
translate([0,0,5])redb();
}


}
module usbasleeve(){
    difference(){
    greena();    
    color("yellow")translate([0,0,-14])cube([6.5,2,16.2],center=true,$fn=6);
    color("yellow")translate([1,0,-11])cylinder(5,1,4.1,center=true,$fn=6);
    color("yellow")translate([-1,0,-11])cylinder(5,1,4.1,center=true,$fn=6);
}
}

 module usbaplug(){
     difference(){
     union(){
     orangea();
     reda();
}
holesa();
 }
 }
module usbbplug(){
    difference(){
union(){
orangeb();
redb();
//greenb();
//yellowb();
}
holesb();
}
}

module greena(){
    color("green")translate([0,0,-13])
difference(){
minkowski(){
    linear_extrude(12)
square([12.1-0.2,4.5-0.2],center=true);
sphere(2.5);
} 
color("red")translate([0,0,2])cube([0.5,12,12],center=true);
color("red")translate([0,0,2])cube([22,0.5,12],center=true);
translate([0,0,1])minkowski(){
    linear_extrude(11)
square([12.1-0.2,4.5-0.2],center=true);
sphere(1.5);
} 
difference(){
color("red")translate([0,0,6.2])linear_extrude(8.2)
 square([12.5+0.2,4.7+0.2],center=true);
   translate([6,0,10])cube([2,9,2.5],center=true); 
   translate([-6,0,10])cube([2,9,2.5],center=true); 
}
translate([0,0,2+13])color("red")translate([0,0,-5])linear_extrude(8)
 square([12.1-0.2,4.5-0.2],center=true);
}
}
module reda(){
    difference(){
    color("red")translate([0,0,-6])linear_extrude(6)
 square([12.1-0.2,4.5-0.2],center=true);
        translate([6,0,-3])cube([2,9,3],center=true); 
   translate([-6,0,-3])cube([2,9,3],center=true); 
}}
module orangea(){
   color("orange")linear_extrude(9.4)
difference(){
square([12.1-0.2,4.5-0.2],center=true);
translate([0,0.9])square([11.3+0.2,2.2+0.2],center=true);
}
}
module holesa(){
    translate([3.5,1.9,-4.7])sphere(2.5);
translate([-3.5,-2.7,-4.7])sphere(2.5);
translate([-1,1.9,-5.7])sphere(2.5);
translate([1,-2.7,-5.7])sphere(2.5); 
color("white")translate([3.5,-0.8+0.2,0.5])cube([1,1,13],center=true);
color("white")translate([-3.5,-0.8+0.2,0.5])cube([1,1,13],center=true);
color("white")translate([-1,-0.8+0.2,-0.3])cube([1,1,12.6],center=true);
color("white")translate([1,-0.8+0.2,-0.3])cube([1,1,12.6],center=true);
    }
    module orangeb(){
    color("orange")linear_extrude(8)
difference(){
polygon([[0,-7.3/2+0.2],[-8.1/2+0.2,-7.3/2+0.2],[-8.1/2+0.2,-7.3/2+6],[-8.1/2+1.3,7.3/2-0.2],[8.1/2-1.3,7.3/2-0.2],[8.1/2-0.2,-7.3/2+6],[8.1/2-0.2,-7.3/2+0.2]]);
square([5.7+0.2,3.5+0.2],center=true);
}    
    }
    module greenb(){
    color("green")translate([0,0,-13])
minkowski(){
    linear_extrude(6)
polygon([[0,-7.3/2],[-8.1/2,-7.3/2],[-8.1/2,-7.3/2+6],[-8.1/2+1.3,7.3/2],[8.1/2-1.3,7.3/2],[8.1/2,-7.3/2+6],[8.1/2,-7.3/2]]);
sphere(2.5,$fn=6);
}    
    }
    module redb(){
        difference(){
    color("red")translate([0,0,-6])linear_extrude(6)
polygon([[0,-7.3/2+0.2],[-8.1/2+0.2,-7.3/2+0.2],[-8.1/2+0.2,-7.3/2+6],[-8.1/2+1.3,7.3/2-0.2],[8.1/2-1.3,7.3/2-0.2],[8.1/2-0.2,-7.3/2+6],[8.1/2-0.2,-7.3/2+0.2]]);    
    
    translate([4.5,0,-2])rotate([0,45,0])cube([3,20,3],center=true);
    translate([-4.5,0,-2])rotate([0,45,0])cube([3,20,3],center=true);
        }
}
    module yellowb(){
    color("yellow")translate([0,0,-18])cube([7,2,15],center=true,$fn=6);    
    }
    module holesb(){
      translate([2.2,4,-5.5])sphere(2.7);
translate([2.2,-4,-5.5])sphere(2.7);
translate([-2.2,4,-4.5])sphere(2.7);
translate([-2.2,-4,-4.5])sphere(2.7);
color("yellow")translate([0,0,-14])cylinder(18,2.5,3.5,center=true,$fn=6);

color("white")translate([-1.3,3.5/2+0.2,1])cube([1,1,12],center=true);
color("white")translate([-1.3,-3.5/2-0.2,1])cube([1,1,12],center=true);
color("white")translate([1.3,3.5/2+0.2,0])cube([1,1,12],center=true);
color("white")translate([1.3,-3.5/2-0.2,0])cube([1,1,12],center=true);  
    }
